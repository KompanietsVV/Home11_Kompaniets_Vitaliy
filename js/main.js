$(document).ready(function(){$("#resizeSlider").resizeSlider({image:{presentacion:{landscape:{url:"url(../img/slider/slide-rock.png)",size:"cover",repeat:"no-repeat",position:"center top"},portrait:{url:"url(../img/slider/slide-rock.png)",size:"cover",repeat:"no-repeat",position:"right center"}},"presentacion 1":{landscape:{url:"url(../img/slider/slide-guitar.png)",size:"cover",repeat:"no-repeat",position:"center bottom"},portrait:{url:"url(../img/slider/slide-guitar.png)",size:"cover",repeat:"no-repeat",position:"left center"}},"presentacion 2":{landscape:{url:"url(../img/slider/slide-back.png)",size:"cover",repeat:"no-repeat",position:"center bottom"},portrait:{url:"url(../img/slider/slide-back.png",size:"cover",repeat:"no-repeat",position:"right top"}}}})}),jQuery(document).ready(function(e){jQuery(".open-popup").on("click",function(){jQuery(".popup").addClass("show")}),jQuery(".close-popup").on("click",function(){jQuery(".popup").removeClass("show")})}),jQuery(".addTask").on("click",function(){jQuery(".toDOlist").append('<div class="task"><input type="text"></div>')}),jQuery(".removeTask").on("click",function(){jQuery(".task").remove()}),jQuery(window).load(function(){jQuery(".flexslider").flexslider({animation:"slide"})}),jQuery(window).load(function(){jQuery("#resizeSlider").on("click",function(){jQuery("#resizeSlider").resizeSlider({hover:!0,image:{presentacion:{landscape:{url:"url(img/slider/slide-rock.png)",size:"cover",repeat:"no-repeat",position:"center top"},portrait:{url:"url(../img/slider/slide-rock.png)",size:"cover",repeat:"no-repeat",position:"right center"}},"presentacion 1":{landscape:{url:"url(img/slider/slide-guitar.png)",size:"cover",repeat:"no-repeat",position:"center bottom"},portrait:{url:"url(../img/slider/slide-guitar.png)",size:"cover",repeat:"no-repeat",position:"left center"}},"presentacion 2":{landscape:{url:"url(../img/slider/slide-back.png)",size:"cover",repeat:"no-repeat",position:"center bottom"},portrait:{url:"url(../img/slider/slide-back.png)",size:"cover",repeat:"no-repeat",position:"right top"}}}})})}),function(e){e.fn.resizeSlider=function(i){function t(){a.css({position:"relative",float:s.float,clear:"both",width:""===s.width?o.width():s.width,height:""===s.height?o.height():s.height,overflow:"hidden",backgroundColor:"rgba(252, 254, 255, 1)"})}function r(){var i=o.width()>o.height()?"landscape":"portrait",r=null,n=null,l=0,p=[];t(),d.empty(),e.each(s.image,function(e,t){r="landscape"===i?t.landscape:t.portrait,n='<div style="',n+="background-image:"+r.url+";",n+="background-position:"+r.position+";",n+="background-repeat:"+r.repeat+";",n+="background-size:"+r.size+";",n+='"></div>',p[l++]=n}),s.aleatorio&&(p=p.sort(function(){return Math.random()-.5})),d.append(p),e(".resizeSlider div:gt(0)",a).fadeOut(0),e(".resizeSlider, .resizeSlider div").css({position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden",backgroundColor:"rgba(252, 254, 255, 1)"})}function n(){l=setInterval(function(){e(".resizeSlider div:first-child",a).fadeOut(s.transition).next("div").fadeIn(s.transition).end().appendTo(d)},s.speed)}var o={width:function(){return e(window).outerWidth(!0)},height:function(){return e(window).outerHeight(!0)}},s=e.extend({transition:750,speed:3500,hover:!1,aleatorio:!1,float:"left",width:"",height:""},i),a=e(this);a.append('<div class="resizeSlider"></div>'),t();var d=e(".resizeSlider",a),l=null;return r(),a.append('<span class="slidernext notranslate">&#9002;</span> <span class="sliderprev notranslate">&#9001;</span>'),e(".slidernext, .sliderprev").css({position:"absolute",zIndex:"2",top:"44%",padding:"2%",cursor:"pointer",fontSize:"2em",textAlign:"center",color:"rgba(232, 234, 235, 1)"}),e(".slidernext").css({right:"0px"}),e(".sliderprev").css({left:"0px"}),s.hover&&(a.append('<div class="sliderumbral"></div>'),e(".sliderumbral",a).on({mouseenter:function(){clearInterval(l)},mouseleave:function(){n()}}),e(".sliderumbral").css({position:"absolute",zIndex:"1",top:"0",left:"30%",width:"40%",height:"75%"})),n(),e(window).resize(function(){r()}),e(".slidernext,.sliderprev",a).on("click",function(){var i=e(this).attr("class").split(" "),t=e(".resizeSlider div:first-child",a),r=e(".resizeSlider div:last-child",a);switch(clearInterval(l),i[0]){case"slidernext":t.stop().fadeOut(s.transition).next("div").fadeIn(s.transition).end().appendTo(d);break;case"sliderprev":t.stop().fadeOut(s.transition),r.stop().prependTo(d).end().fadeIn(s.transition)}n()}),this}}(jQuery),function(e){e.fn.resizeSlider=function(i){function t(){d.css({position:"relative",float:a.float,clear:"both",width:""===a.width?s.width():a.width,height:""===a.height?s.height():a.height,overflow:"hidden",backgroundColor:"rgba(252, 254, 255, 1)"})}function r(){var i=s.width()>s.height()?"landscape":"portrait",r=null,n=null,o=0,p=[];t(),l.empty(),e.each(a.image,function(e,t){r="landscape"===i?t.landscape:t.portrait,n='<div style="',n+="background-image:"+r.url+";",n+="background-position:"+r.position+";",n+="background-repeat:"+r.repeat+";",n+="background-size:"+r.size+";",n+='"></div>',p[o++]=n}),a.aleatorio&&(p=p.sort(function(){return Math.random()-.5})),l.append(p),e(".resizeSlider div:gt(0)",d).fadeOut(0),e(".resizeSlider, .resizeSlider div").css({position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden",backgroundColor:"rgba(252, 254, 255, 1)"})}function n(){h=setInterval(function(){e(".resizeSlider div:first-child",d).fadeOut(a.transition).next("div").fadeIn(a.transition).end().appendTo(l)},a.speed)}function o(){clearInterval(h)}var s={width:function(){return e(window).outerWidth(!0)},height:function(){return e(window).outerHeight(!0)}},a=e.extend({transition:750,speed:3500,hover:!1,aleatorio:!1,float:"left",width:"",height:""},i),d=e(this),l=e(".resizeSlider",(d.append('<div class="resizeSlider"></div>'),t(),d)),p='<span class="slidernext notranslate">&#9002;</span>',c='<span class="sliderprev notranslate">&#9001;</span>',u='<div class="sliderumbral"></div>',h=null;return r(),d.append(p+" "+c),e(".slidernext, .sliderprev").css({position:"absolute",zIndex:"2",top:"44%",padding:"2%",cursor:"pointer",fontSize:"2em",textAlign:"center",color:"rgba(232, 234, 235, 1)"}),e(".slidernext").css({right:"0px"}),e(".sliderprev").css({left:"0px"}),a.hover&&(d.append(u),e(".sliderumbral",d).on({mouseenter:function(){o()},mouseleave:function(){n()}}),e(".sliderumbral").css({position:"absolute",zIndex:"1",top:"0",left:"30%",width:"40%",height:"75%"})),n(),e(window).resize(function(){r()}),e(".slidernext,.sliderprev",d).on("click",function(){var i=e(this).attr("class").split(" "),t=e(".resizeSlider div:first-child",d),r=e(".resizeSlider div:last-child",d);switch(o(),i[0]){case"slidernext":t.stop().fadeOut(a.transition).next("div").fadeIn(a.transition).end().appendTo(l);break;case"sliderprev":t.stop().fadeOut(a.transition),r.stop().prependTo(l).end().fadeIn(a.transition)}n()}),this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
